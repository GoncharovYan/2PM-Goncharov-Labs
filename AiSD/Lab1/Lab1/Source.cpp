/*
На столе в ряд выложены n камней, каждый из которых может быть красного, зеленого или синего цвета. Посчитайте, какое минимальное количество камней нужно убрать со стола, чтобы любые два соседних камня имели разные цвета. Камни в ряду считаются соседними, если между ними нет других камней.

Входные данные
В первой строке задано целое число n (1 ≤ n ≤ 50) — количество камней на столе.

В следующей строке задана строка s, обозначающая цвета камней. Будем считать, что камни в ряду пронумерованы целыми числами от 1 до n слева направо. Тогда i-ый символ s равен «R», если i-ый камень красного цвета, «G» — если он зеленого цвета, и «B» — если он синего цвета.

Выходные данные
Выведите единственное целое число — ответ на задачу.
*/

#include <iostream>

using namespace std;

int main()
{
	setlocale(LC_ALL, "rus");
	int Count, Mem, Score;
	cout << "Количество шаров: ";
	cin >> Count;
	char* Colors = new char[Count];

	Score = 0;

	cout << "Цвета шаров (R, G, B): ";
	for (int i = 0; i < Count; i++)
	{
		cin >> Colors[i];
		if (i != 0 && Colors[i] == Mem)
			Score++;
		Mem = Colors[i];
	}

	cout << Score << endl;
	delete[] Colors;

	return 0;
}